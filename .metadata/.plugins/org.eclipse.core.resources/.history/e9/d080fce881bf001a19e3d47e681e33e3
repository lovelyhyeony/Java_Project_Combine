package com.biz.student.service;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.biz.student.domain.Student;

public class ScoreServiceImplV1 implements ScoreService {

	// 필드변수로 List선언
	List<Student> studentList;
	
	// 생성자 안에 List초기화 해주는 코드 넣어줌
	public ScoreServiceImplV1() {
		studentList =  new ArrayList<Student>();
	}
	
	@Override
	public boolean inputStudent() {
		// TODO Auto-generated method stub
		String studentFile = "src/com/biz/student/exec/student.txt";
		
		// FileReader 클래스로 fileReader 객체(인스턴스)를 선언하고 clear하기
		// 문자열, 숫자 등이 아닌 정체를 알 수 없는 클래스로 객체를 선언할 때는 
		// 가급적 null로 clear를 시켜주는 것이 좋다.
		FileReader fileReader = null;
		
		// 로컬디스크에 저장된 파일을 읽을 때 FileReader만으로 읽을 수 있지만
		// 파일을 읽어들이는 성능상의 이점을 주기위해서 중간에 BufferedReader를
		// 연결하여 파일을 읽어들이는 것이 좋다.
		BufferedReader buffer = null;
		
		try {
			// 읽어들일 파일을 열고, 파일에 관련된 정보를 fileReader 객체에 저장
			fileReader = new FileReader(studentFile);
			buffer = new BufferedReader(fileReader);

			String reader = "";

			while(true) {
				reader = buffer.readLine();
				if (reader == null) {
					break;
				}
				// System.out.println(reader);
				
				// 읽어들인 라인을 분해하여 학생정보로 변환
				String[] students = reader.split(":");
				
				Student std = new Student();
				std.setNum(students[0]);
				std.setName(students[1]);
				std.setGrade(Integer.valueOf(students[2]));
				std.setDept(students[4]); // 중간에 반이 있어서 4번지!
				studentList.add(std);
			}
			
			// 닫는 순서는 연 순서와 반대로!! 
			// 파일을 읽기, 쓰기로 열었으면 모두 닫아서 종료해주어야한다.
			buffer.close();
			fileReader.close();
			
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return true;
	}

	@Override
	public boolean inputScore() {
		// TODO Auto-generated method stub
		String studentFile = "src/com/biz/student/exec/student.txt";
		
		FileReader fileReader = null;
		

		BufferedReader buffer = null;
		
		try {
			fileReader = new FileReader(studentFile);
			buffer = new BufferedReader(fileReader);

			String reader = "";

			while(true) {
				reader = buffer.readLine();
				if (reader == null) {
					break;
				}

				String[] students = reader.split(":");
				
				Student std = new Student();
				std.setNum(students[0]);
				std.setName(students[1]);
				std.setGrade(Integer.valueOf(students[2]));
				std.setDept(students[4]); // 중간에 반이 있어서 4번지!
				studentList.add(std);
			}
			
			// 닫는 순서는 연 순서와 반대로!! 
			// 파일을 읽기, 쓰기로 열었으면 모두 닫아서 종료해주어야한다.
			buffer.close();
			fileReader.close();
			
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return true;
	}

	@Override
	public void clacSum() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void calcAvg() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socreList() {
		// TODO Auto-generated method stub
		
	}

}
